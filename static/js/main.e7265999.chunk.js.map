{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","memo","todos","selectTodoId","selectedTodoId","className","map","todo","id","completed","undefined","cn","title","type","onClick","TodoFilter","filter","query","filterChange","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","closeModal","userId","useState","user","setUser","useEffect","getUser","href","email","name","App","setTodos","setSelectedTodoId","setFilterChange","loadedTodos","useCallback","selectedTodo","useMemo","find","visibleTodos","isSearchBySelect","isSearchQuery","toLowerCase","includes","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7265999.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodoId: (todoId: number) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = memo((\n  {\n    todos,\n    selectTodoId,\n    selectedTodoId,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n              ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )\n              : (undefined)}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn('',\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                selectTodoId(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn('far',\n                    { 'fa-eye': selectedTodoId === 0 },\n                    { 'fa-eye-slash': selectedTodoId === todo.id })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n));\n","import React, { memo } from 'react';\n\ntype Props = {\n  filter: string,\n  query: string;\n  filterChange: (filter: string) => void;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = memo((\n  {\n    filter,\n    query,\n    filterChange,\n    setQuery,\n  },\n) => (\n\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => filterChange(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query\n          && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n      </span>\n    </p>\n  </form>\n));\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, memo, useEffect } from 'react';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = memo(({ todo, closeModal }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, {\n  useEffect, useState, useMemo, useCallback,\n} from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [filter, setFilterChange] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then((loadedTodos) => setTodos(loadedTodos));\n  }, []);\n\n  const selectTodoId = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const closeModal = useCallback(() => (\n    setSelectedTodoId(0)\n  ), []);\n\n  const selectedTodo = useMemo(() => (\n    todos.find(todo => todo.id === selectedTodoId)\n  ), [selectedTodoId]);\n\n  const visibleTodos = todos.filter(todo => {\n    const isSearchQuery = todo.title.toLowerCase().includes(query.toLowerCase());\n\n    let isSearchBySelect;\n\n    switch (filter) {\n      case 'completed':\n        isSearchBySelect = todo.completed;\n        break;\n\n      case 'active':\n        isSearchBySelect = !todo.completed;\n        break;\n\n      case 'all':\n        return isSearchQuery;\n\n      default:\n        break;\n    }\n\n    return isSearchQuery && isSearchBySelect;\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filter={filter}\n                filterChange={setFilterChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodoId={selectTodoId}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )\n                : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            closeModal={closeModal}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}